{"version":3,"file":"configurationtour.min.js","sources":["../src/configurationtour.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * User tours configuration.\r\n *\r\n * @module      tool_usertours/configurationtour\r\n * @copyright   2024 The Open University\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nconst ANY_VALUE = \"__ANYVALUE__\";\r\n\r\nexport const init = () => {\r\n    // Initialize the category filter\r\n    initConfigurationCategoryFilter();\r\n};\r\n\r\n/**\r\n * Initialize the category filter for the configuration page.\r\n */\r\nconst initConfigurationCategoryFilter = () => {\r\n    const categorySelect = document.querySelector(\"[name='filter_category[]']\");\r\n    const excludeSelect = document.querySelector(\"[name='filter_exclude_category[]']\");\r\n\r\n    if (categorySelect && excludeSelect) {\r\n        // Add event listeners to update the exclude categories when the include categories change.\r\n        categorySelect.addEventListener(\"change\", () => {\r\n            updateExcludeCategories(categorySelect, excludeSelect);\r\n        });\r\n\r\n        // Initialize the exclude categories based on the selected include categories.\r\n        updateExcludeCategories(categorySelect, excludeSelect);\r\n    }\r\n};\r\n\r\n/**\r\n * Adjust the height of a select element based on the number of options.\r\n *\r\n * @param {HTMLSelectElement} select\r\n */\r\nconst adjustHeight = (select) => {\r\n    select.size = Math.min(select.options.length || 1, 10);\r\n};\r\n\r\n/**\r\n * Update the exclude categories based on the selected include categories.\r\n *\r\n * @param {HTMLSelectElement} categorySelect\r\n * @param {HTMLSelectElement} excludeSelect\r\n */\r\nconst updateExcludeCategories = (categorySelect, excludeSelect) => {\r\n    // Get the selected categories and update the 'Any' option.\r\n    const selectedCategories = new Set(Array.from(categorySelect.selectedOptions).map(option => option.value));\r\n\r\n    // Get the selected exclude categories and create a map of options.\r\n    const excludeSelected = new Set(Array.from(excludeSelect.selectedOptions).map(option => option.value));\r\n    const excludeOptions = new Map();\r\n\r\n    // Flag to check if 'Any' value is selected.\r\n    const anySelected = selectedCategories.has(ANY_VALUE);\r\n    Array.from(categorySelect.options).forEach(option => {\r\n        const isNotAny = option.value !== ANY_VALUE;\r\n\r\n        // If 'Any' is selected, include all options in excludeOptions.\r\n        if (anySelected && isNotAny) {\r\n            excludeOptions.set(option.value, option.text);\r\n        } else if (isNotAny) {\r\n            // Otherwise, check if the option is a child of any selected category.\r\n            for (const selected of selectedCategories) {\r\n                const selectedOption = categorySelect.querySelector(`option[value=\"${selected}\"]`);\r\n                if (option.text.startsWith(`${selectedOption.text} / `)) {\r\n                    excludeOptions.set(option.value, option.text);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    // Update the exclude categories select element.\r\n    excludeSelect.innerHTML = Array.from(excludeOptions)\r\n        .sort(([, a], [, b]) => a.localeCompare(b))\r\n        .map(([key, value]) =>\r\n            `<option value=\"${key}\" ${excludeSelected.has(key) ? 'selected' : ''}>${value}</option>`\r\n        ).join('');\r\n\r\n    // Adjust the height of the select elements.\r\n    adjustHeight(excludeSelect);\r\n};\r\n"],"names":["initConfigurationCategoryFilter","categorySelect","document","querySelector","excludeSelect","addEventListener","updateExcludeCategories","selectedCategories","Set","Array","from","selectedOptions","map","option","value","excludeSelected","excludeOptions","Map","anySelected","has","select","options","forEach","isNotAny","set","text","selected","selectedOption","startsWith","innerHTML","sort","a","b","localeCompare","_ref3","key","join","size","Math","min","length"],"mappings":"qKAwBoB,KAEhBA,yCAMEA,gCAAkC,WAC9BC,eAAiBC,SAASC,cAAc,8BACxCC,cAAgBF,SAASC,cAAc,sCAEzCF,gBAAkBG,gBAElBH,eAAeI,iBAAiB,UAAU,KACtCC,wBAAwBL,eAAgBG,kBAI5CE,wBAAwBL,eAAgBG,iBAmB1CE,wBAA0B,CAACL,eAAgBG,uBAEvCG,mBAAqB,IAAIC,IAAIC,MAAMC,KAAKT,eAAeU,iBAAiBC,KAAIC,QAAUA,OAAOC,SAG7FC,gBAAkB,IAAIP,IAAIC,MAAMC,KAAKN,cAAcO,iBAAiBC,KAAIC,QAAUA,OAAOC,SACzFE,eAAiB,IAAIC,IAGrBC,YAAcX,mBAAmBY,IAjDzB,gBA8BIC,IAAAA,OAoBlBX,MAAMC,KAAKT,eAAeoB,SAASC,SAAQT,eACjCU,SAnDI,iBAmDOV,OAAOC,SAGpBI,aAAeK,SACfP,eAAeQ,IAAIX,OAAOC,MAAOD,OAAOY,WACrC,GAAIF,aAEF,MAAMG,YAAYnB,mBAAoB,OACjCoB,eAAiB1B,eAAeE,sCAA+BuB,mBACjEb,OAAOY,KAAKG,qBAAcD,eAAeF,aAAY,CACrDT,eAAeQ,IAAIX,OAAOC,MAAOD,OAAOY,iBAQxDrB,cAAcyB,UAAYpB,MAAMC,KAAKM,gBAChCc,MAAK,oBAAIC,UAAOC,gBAAOD,EAAEE,cAAcD,MACvCpB,KAAIsB,YAAEC,IAAKrB,4CACUqB,iBAAQpB,gBAAgBI,IAAIgB,KAAO,WAAa,eAAMrB,sBAC1EsB,KAAK,KA3COhB,OA8CLhB,eA7CNiC,KAAOC,KAAKC,IAAInB,OAAOC,QAAQmB,QAAU,EAAG"}