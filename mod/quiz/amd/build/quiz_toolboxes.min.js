define("mod_quiz/quiz_toolboxes",["exports","core/ajax","core/str","mod_quiz/quiz_utils","core/notification","core/pending"],(function(_exports,_ajax,_str,_quiz_utils,_notification,_pending){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.config=void 0,_exports.initResourceToolbox=function(courseid,quizid,ajaxurl){new ResourceToolBox(courseid,quizid,ajaxurl)},_notification=_interopRequireDefault(_notification),_pending=_interopRequireDefault(_pending);const CSS_EDITINSTRUCTIONS="editinstructions",CSS_EDITINGMAXMARK="editor_displayed",CSS_SELECTMULTIPLE="select-multiple",CSS_TITLEEDITOR="titleeditor",SELECTOR={ACTIONAREA:".actions",ACTIONLINKTEXT:".actionlinktext",ACTIVITYACTION:"a.cm-edit-action[data-action], a.editing_maxmark, a.editing_section, input.shuffle_questions",ACTIVITYFORM:"span.instancemaxmarkcontainer form",ACTIVITYINSTANCE:"."+"activityinstance",SECTIONINSTANCE:".sectioninstance",ACTIVITYLI:"li.activity, li.section",ACTIVITYMAXMARK:"input[name=maxmark]",COMMANDSPAN:".commands",CONFIGTOOLBOX:".config-toolbox",CONTENTAFTERLINK:"div.contentafterlink",CONTENTWITHOUTLINK:"div.contentwithoutlink",DELETESECTIONICON:"a.editing_delete .icon",EDITMAXMARK:"a.editing_maxmark",EDITSECTION:"a.editing_section",EDITSECTIONICON:"a.editing_section .icon",EDITSHUFFLEQUESTIONSACTION:"input.cm-edit-action[data-action]",EDITSHUFFLEAREA:".instanceshufflequestions .shuffle-progress",HIDE:"a.editing_hide",HIGHLIGHT:"a.editing_highlight",INSTANCENAME:"span.instancename",INSTANCEMAXMARK:"span.instancemaxmark",INSTANCESECTION:"span.instancesection",INSTANCESECTIONAREA:"div.section-heading",MAXMARKCONTAINER:".instancemaxmarkcontainer",MODINDENTDIV:".mod-indent",MODINDENTOUTER:".mod-indent-outer",NUMQUESTIONS:".numberofquestions",PAGECONTENT:"div#page-content",PAGELI:"li.page",SECTIONLI:"li.section",SECTIONUL:"ul.section",SECTIONFORM:".instancesectioncontainer form",SECTIONINPUT:"input[name=section]",SELECTMULTIPLEBUTTON:"#selectmultiplecommand",SELECTMULTIPLECANCELBUTTON:"#selectmultiplecancelcommand",SELECTMULTIPLECHECKBOX:".select-multiple-checkbox",SELECTMULTIPLEDELETEBUTTON:"#selectmultipledeletecommand",SELECTALL:"#questionselectall",SHOW:"a."+"editing_show",SLOTLI:"li.slot",SUMMARKS:".mod_quiz_summarks"},BODY=document.body;class ResourceToolBox extends class{constructor(config,courseId,quizId){_defineProperty(this,"config",{}),_defineProperty(this,"quizId",0),_defineProperty(this,"courseId",0),this.config=config,this.courseId=courseId,this.quizId=quizId}sendRequest(data,statusSpinner,methodName,optionalConfig){const parameters={methodname:methodName,args:data};if(optionalConfig)for(let varName in optionalConfig)config[varName]=optionalConfig[varName];return statusSpinner&&statusSpinner.classList.remove("d-none"),(0,_ajax.call)([parameters])[0]}}{constructor(courseId,quizId,ajaxURL){const config=JSON.parse(document.querySelector(SELECTOR.CONFIGTOOLBOX).dataset.config);super(config,courseId,quizId),_defineProperty(this,"courseId",0),_defineProperty(this,"quizId",0),_defineProperty(this,"ajaxURL",null),_defineProperty(this,"config",{}),_defineProperty(this,"editMaxMarkEvents",[]),this.courseId=courseId,this.quizId=quizId,this.ajaxURL=ajaxURL,this.config=config,BODY.addEventListener("click",(event=>{(event.target.closest(SELECTOR.ACTIVITYACTION)||event.target.closest(SELECTOR.DEPENDENCY_LINK))&&this.handleDataAction(event)})),this.initialiseSelectMultiple()}initialiseSelectMultiple(){const body=document.body;document.querySelector(SELECTOR.SELECTMULTIPLEBUTTON).addEventListener("click",(function(e){e.preventDefault(),body.classList.add(CSS_SELECTMULTIPLE)})),document.querySelector(SELECTOR.SELECTMULTIPLECANCELBUTTON).addEventListener("click",(function(e){e.preventDefault(),body.classList.remove(CSS_SELECTMULTIPLE)})),body.addEventListener("click",function(e){e.target.closest(SELECTOR.SELECTMULTIPLEDELETEBUTTON)&&this.deleteMultipleAction(e)}.bind(this)),Y.delegate("click",this.delete_multiple_action,BODY,SELECTOR.SELECTMULTIPLEDELETEBUTTON,this)}handleDataAction(ev){let node=ev.target;this.isATag(node)||(node=node.closest(SELECTOR.ACTIVITYACTION));const action=node.dataset.action,activity=node.closest(SELECTOR.ACTIVITYLI);if(this.isATag(node)&&action&&activity)switch(action){case"editmaxmark":this.editMaxMark(ev,node,activity);break;case"delete":this.deleteWithConfirmation(ev,node,activity,action);break;case"addpagebreak":case"removepagebreak":this.updatePageBreak(ev,node,activity,action);break;case"adddependency":case"removedependency":this.updateDependency(ev,node,activity,action)}}isATag(node){return"a"===node.tagName.toLowerCase()}editMaxMark(ev,button,activity){const instanceMaxmark=activity.querySelector(SELECTOR.INSTANCEMAXMARK),instance=activity.querySelector(SELECTOR.ACTIVITYINSTANCE),anchor=instanceMaxmark,oldMaxMark=instanceMaxmark.firstChild.nodeValue,data={id:_quiz_utils.slot.getId(activity),quizid:this.quizId};let maxMarkText=oldMaxMark;ev.preventDefault();new _pending.default("get-max-mark");this.sendRequest(data,null,"mod_quiz_get_max_mark").then((response=>{M.core.actionmenu&&M.core.actionmenu.instance&&M.core.actionmenu.instance.hideMenu(ev),response.instancemaxmark&&(maxMarkText=response.instancemaxmark);const editForm=_quiz_utils.util.createElement("form",{action:"#"}),editInstructions=_quiz_utils.util.createElement("span",{id:"id_editinstructions",class:CSS_EDITINSTRUCTIONS});editInstructions.innerHTML=M.util.get_string("edittitleinstructions","moodle");const editor=_quiz_utils.util.createElement("input",{type:"text",name:"maxmark",class:CSS_TITLEEDITOR,value:maxMarkText,autocomplete:"off","aria-describedby":"id_editinstructions",maxLength:12,size:parseInt(this.config.questiondecimalpoints,10)+2});editForm.appendChild(editor),editForm.dataset.anchor=anchor.outerHTML,instance.parentNode.insertBefore(editInstructions,instance),activity.querySelector(SELECTOR.MAXMARKCONTAINER).replaceChild(editForm,anchor),activity.classList.add(CSS_EDITINGMAXMARK),editor.focus(),editor.select(),editor.addEventListener("blur",(event=>this.handleMaxMarkEditorBlur.call(this,event,activity,!1))),editor.addEventListener("keydown",(event=>this.handleMaxMarkEditorType.call(this,event,activity,!0))),editForm.addEventListener("submit",(event=>this.handleMaxMarkFormSubmit.call(this,event,activity,oldMaxMark))),this.editMaxMarkEvents=[{type:"blur",handler:this.handleMaxMarkEditorBlur,element:editor,selector:SELECTOR.SELECTMULTIPLECHECKBOX},{type:"keydown",handler:this.handleMaxMarkEditorType,element:editor,selector:SELECTOR.SELECTMULTIPLECHECKBOX},{type:"submit",handler:this.handleMaxMarkFormSubmit,element:editForm,selector:"form"}]})).catch(_notification.default.exception)}deleteMultipleAction(ev){const problemSection=this.findSectionsThatWouldBecomeEmpty();void 0!==problemSection?(0,_str.getStrings)([{key:"cannotremoveslots",component:"quiz"},{key:"cannotremoveallsectionslots",component:"quiz",param:problemSection}]).then((_ref=>{let[string1,string2]=_ref;return _notification.default.alert(string1,string2),!0})).catch(_notification.default.exception):this.deleteMultipleWithConfirmation(ev)}findSectionsThatWouldBecomeEmpty(){let section;const sectionNodes=[...document.querySelectorAll(SELECTOR.SECTIONLI)];return sectionNodes.length>1&&sectionNodes.some((node=>{const sectionName=node.querySelector(SELECTOR.INSTANCESECTION).textContent,checked=node.querySelectorAll("".concat(SELECTOR.SELECTMULTIPLECHECKBOX,":checked")),unchecked=node.querySelectorAll("".concat(SELECTOR.SELECTMULTIPLECHECKBOX,":not(:checked)"));return checked.length>0&&0===unchecked.length&&(section=sectionName),section})),section}async deleteMultipleWithConfirmation(ev){ev.preventDefault();let ids="";const slots=[];document.querySelectorAll("".concat(SELECTOR.SELECTMULTIPLECHECKBOX,":checked")).forEach((node=>{const slotData=_quiz_utils.slot.getSlotFromComponent(node);ids+=""===ids?"":",",ids+=_quiz_utils.slot.getId(slotData),slots.push(slotData)}));const element=document.querySelector("div.mod-quiz-edit-content");if(!slots.length)return;const[title,question,saveLabel]=await(0,_str.getStrings)([{key:"confirm",component:"moodle"},{key:"areyousureremoveselected",component:"moodle"},{key:"yes",component:"moodle"}]);_notification.default.saveCancelPromise(title,question,saveLabel).then((()=>{const spinner=this.addSpinner(element),data={ids:ids,quizid:this.quizId};this.sendRequest(data,spinner,"mod_quiz_delete_multiple").then((response=>{response.deleted&&(document.querySelectorAll("".concat(SELECTOR.SELECTMULTIPLECHECKBOX,":checked")).forEach((node=>{_quiz_utils.slot.remove(node.closest("li.activity"))})),this.reorganiseEditPage(),document.body.classList.remove(CSS_SELECTMULTIPLE)),response.newsummarks&&(document.querySelector(SELECTOR.SUMMARKS).innerHTML=response.newsummarks),response.newnumquestions&&(0,_str.getString)("numquestionsx","quiz",response.newnumquestions).then((string=>{document.querySelector(SELECTOR.NUMQUESTIONS).innerHTML=string}))}))})).catch((()=>{}))}handleMaxMarkEditorBlur(event,activity,preventDefault){return this.editMaxMarkCancel(event,activity,preventDefault)}handleMaxMarkEditorType(event,activity,preventDefault){"Escape"!==event.key&&27!==event.keyCode||this.editMaxMarkCancel(event,activity,preventDefault)}handleMaxMarkFormSubmit(event,activity,oldMaxMark){return event.preventDefault(),this.editMaxMarkSubmit(event,activity,oldMaxMark)}async deleteWithConfirmation(ev,button,activity){ev.preventDefault();const element=activity,qtypeClass=element.getAttribute("class").match(/qtype_(\S*)/)[1],allStrings=[{key:"confirm",component:"moodle"},{key:"confirmremovequestion",component:"quiz",param:await(0,_str.getString)("pluginname","qtype_"+qtypeClass)},{key:"yes",component:"moodle"}],[title,question,saveLabel]=await(0,_str.getStrings)(allStrings);await _notification.default.saveCancelPromise(title,question,saveLabel);const spinner=this.addSpinner(element),data={quizid:this.quizId,id:_quiz_utils.slot.getId(element)};this.sendRequest(data,spinner,"mod_quiz_delete_resource").then((response=>{response.deleted&&(_quiz_utils.slot.remove(element),this.reorganiseEditPage(),M.core.actionmenu&&M.core.actionmenu.instance&&M.core.actionmenu.instance.hideMenu(ev))}))}reorganiseEditPage(){_quiz_utils.slot.reorderSlots(),_quiz_utils.slot.reorderPageBreaks(),_quiz_utils.page.reorderPages(),_quiz_utils.slot.updateOneSlotSections(),_quiz_utils.slot.updateAllDependencyIcons()}updatePageBreak(ev,button,activity,action){ev.preventDefault();let nextActivity=activity.nextElementSibling;for(;nextActivity&&!nextActivity.matches(SELECTOR.SLOTLI);)nextActivity=nextActivity.nextElementSibling;if(!nextActivity)return;const spinner=this.addSpinner(nextActivity),value="removepagebreak"===action?1:2,data={id:_quiz_utils.slot.getId(nextActivity),value:value,quizid:this.quizId};this.sendRequest(data,spinner,"mod_quiz_update_page_break").then((response=>{if(response.slots){if("addpagebreak"===action)_quiz_utils.page.add(activity);else{const pageEl=activity.nextElementSibling&&activity.nextElementSibling.matches(_quiz_utils.page.SELECTORS.PAGE)?activity.nextElementSibling:null;pageEl&&_quiz_utils.page.remove(pageEl,!0)}this.reorganizeEditPage()}return!0})).catch(_notification.default.exception)}updateDependency(){}reorganizeEditPage(){_quiz_utils.slot.reorderSlots(),_quiz_utils.slot.reorderPageBreaks(),_quiz_utils.page.reorderPages(),_quiz_utils.slot.updateOneSlotSections(),_quiz_utils.slot.updateAllDependencyIcons()}editMaxMarkCancel(ev,activity,preventDefault){preventDefault&&ev.preventDefault(),this.editMaxMarkClear(activity)}editMaxMarkClear(activity){if(0===this.editMaxMarkEvents.length)return;this.editMaxMarkEvents.forEach((event=>{event.element.removeEventListener(event.type,event.handler)})),this.editMaxMarkEvents=[];const editForm=activity.querySelector(SELECTOR.ACTIVITYFORM),instructions=activity.querySelector("#id_editinstructions");if(editForm&&(editForm.parentNode.insertAdjacentHTML("afterbegin",editForm.dataset.anchor),editForm.remove()),instructions&&instructions.parentNode.removeChild(instructions),activity.classList.remove(CSS_EDITINGMAXMARK),setTimeout((function(){activity.querySelector(SELECTOR.EDITMAXMARK).focus()}),100),!document.querySelector("input[name=maxmark]")){const input=_quiz_utils.util.createElement("input",{type:"text",name:"maxmark",class:"d-none"});document.querySelector("body").appendChild(input)}}editMaxMarkSubmit(ev,activity,originalMaxMark){ev.preventDefault();const editor=activity.querySelector(SELECTOR.ACTIVITYFORM+" "+SELECTOR.ACTIVITYMAXMARK),newMaxMark=editor.value.trim(),spinner=this.addSpinner(activity);if(editor.blur(),activity.querySelector(SELECTOR.INSTANCEMAXMARK).textContent=newMaxMark,null!==newMaxMark&&""!==newMaxMark&&newMaxMark!==originalMaxMark){const data={maxmark:newMaxMark,id:_quiz_utils.slot.getId(activity),quizid:this.quizId};this.sendRequest(data,spinner,"mod_quiz_update_max_mark").then((response=>{spinner.classList.add("d-none"),response.instancemaxmark&&(activity.querySelector(SELECTOR.INSTANCEMAXMARK).textContent=response.instancemaxmark),response.newsummarks&&(document.querySelector(SELECTOR.SUMMARKS).innerHTML=response.newsummarks)})).catch(_notification.default.exception)}}addSpinner(activity){const actionArea=activity.querySelector(SELECTOR.ACTIONAREA);return actionArea?_quiz_utils.util.addSpinner(actionArea):null}}const config=JSON.parse(document.querySelector(SELECTOR.CONFIGTOOLBOX).dataset.config);_exports.config=config}));

//# sourceMappingURL=quiz_toolboxes.min.js.map